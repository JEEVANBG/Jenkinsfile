Amazon Elastic Kubernetes Service (Amazon EKS):
        Is a managed service that you can use to run Kubernetes on AWS without needing to install, operate, and maintain our own Kubernetes control plane or nodes. 
        Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. 

Amazon EKS:
      - Runs and scales the Kubernetes control plane across multiple AWS Availability Zones to ensure high availability.
      - Automatically scales control plane instances based on load, detects and replaces unhealthy control plane instances, and it provides automated version updates and patching for them.
      - Is integrated with many AWS services to provide scalability and security for your applications, including the following capabilities:
        * Amazon ECR for container images
        * Elastic Load Balancing for load distribution  
        * IAM for authentication
        * Amazon VPC for isolation
      - Can easily migrate any standard Kubernetes application to Amazon EKS without any code modifications.

Amazon EKS control plane architecture :
        Amazon EKS runs a single tenant Kubernetes control plane for each cluster. The control plane infrastructure isn't shared across clusters or AWS accounts. The control plane consists of at least two API server instances and three etcd instances that run across three Availability Zones within an AWS Region. Amazon EKS:

        - Actively monitors the load on control plane instances and automatically scales them to ensure high performance.
        - Automatically detects and replaces unhealthy control plane instances, restarting them across the Availability Zones within the AWS Region as needed.
        - Leverages the architecture of AWS Regions in order to maintain high availability.

Prequisets are:
        - install aws cli
        - install kubectl
        - install eksctl

Getting started with Amazon EKS is easy:
        - Create an Amazon EKS cluster in the AWS Management Console or with the AWS CLI or one of the AWS SDKs.
        - Launch managed or self-managed Amazon EC2 nodes, or deploy your workloads to AWS Fargate.
        - When your cluster is ready, you can configure your favorite Kubernetes tools, such as kubectl, to communicate with your cluster.
        - Deploy and manage workloads on your Amazon EKS cluster the same way that you would with any other Kubernetes environment. You can also view information about your workloads using the AWS Management Console.

Managed node groups :
        Amazon EKS managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters.

        With Amazon EKS managed node groups, you don't need to separately provision or register the Amazon EC2 instances that provide compute capacity to run your Kubernetes applications. You can create, automatically update, or terminate nodes for your cluster with a single operation.

Node taints on managed node groups :
        - Amazon EKS supports configuring Kubernetes taints through managed node groups. 
        - Taints and tolerations work together to ensure that Pods aren't scheduled onto inappropriate nodes. 
        - One or more taints can be applied to a node. This marks that the node shouldn't accept any Pods that don't tolerate the taints.         - Tolerations are applied to Pods and allow, but don't require, the Pods to schedule onto nodes with matching taints. For more information, see Taints and Tolerations in the Kubernetes documentation.

        Kubernetes node taints can be applied to new and existing managed node groups using the AWS Management Console or through the Amazon EKS API.

Amazon EKS add-ons :
        - An add-on is software that provides supporting operational capabilities to Kubernetes applications, but is not specific to the application.
        - This includes software like observability agents or Kubernetes drivers that allow the cluster to interact with underlying AWS resources for networking, compute, and storage.
        - Amazon EKS automatically installs self-managed add-ons such as the Amazon VPC CNI plugin for Kubernetes, kube-proxy, and CoreDNS for every cluster. 
        - Amazon EKS add-ons allow you to consistently ensure that your Amazon EKS clusters are secure and stable and reduce the amount of work that you need to do in order to install, configure, and update add-ons.

Amazon VPC CNI plugin for Kubernetes
        This CNI add-on creates elastic network interfaces and attaches them to your Amazon EC2 nodes. The add-on also assigns a private IPv4 or IPv6 address from your VPC to each Pod and service. This add-on is installed, by default, on your cluster. For more information, see Working with the Amazon VPC CNI plugin for Kubernetes Amazon EKS add-on.

CoreDNS
        CoreDNS is a flexible, extensible DNS server that can serve as the Kubernetes cluster DNS. CoreDNS provides name resolution for all Pods in the cluster. This add-on is installed, by default, on your cluster. For more information, see Working with the CoreDNS Amazon EKS add-on.

kube-proxy
        This add-on maintains network rules on your Amazon EC2 nodes and enables network communication to your Pods. This add-on is installed, by default, on your cluster. For more information, see Updating the Kubernetes kube-proxy self-managed add-on.  

